[{"D:\\mydemo\\mobile-shop\\frontend\\src\\index.js":"1","D:\\mydemo\\mobile-shop\\frontend\\src\\reportWebVitals.js":"2","D:\\mydemo\\mobile-shop\\frontend\\src\\App.js":"3","D:\\mydemo\\mobile-shop\\frontend\\src\\components\\Header\\index.jsx":"4","D:\\mydemo\\mobile-shop\\frontend\\src\\components\\Footer\\index.jsx":"5","D:\\mydemo\\mobile-shop\\frontend\\src\\screens\\HomeScreen\\index.jsx":"6","D:\\mydemo\\mobile-shop\\frontend\\src\\components\\Product\\index.jsx":"7","D:\\mydemo\\mobile-shop\\frontend\\src\\components\\Rating\\index.jsx":"8","D:\\mydemo\\mobile-shop\\frontend\\src\\router\\index.js":"9","D:\\mydemo\\mobile-shop\\frontend\\src\\screens\\ProductScreen\\index.jsx":"10","D:\\mydemo\\mobile-shop\\frontend\\src\\services\\products.js":"11","D:\\mydemo\\mobile-shop\\frontend\\src\\services\\request.js":"12","D:\\mydemo\\mobile-shop\\frontend\\src\\redux\\store.js":"13","D:\\mydemo\\mobile-shop\\frontend\\src\\redux\\reducers\\index.js":"14","D:\\mydemo\\mobile-shop\\frontend\\src\\redux\\reducers\\product.js":"15","D:\\mydemo\\mobile-shop\\frontend\\src\\redux\\constant.js":"16","D:\\mydemo\\mobile-shop\\frontend\\src\\redux\\actions\\product.js":"17","D:\\mydemo\\mobile-shop\\frontend\\src\\components\\Loader\\index.jsx":"18","D:\\mydemo\\mobile-shop\\frontend\\src\\components\\Message\\index.jsx":"19","D:\\mydemo\\mobile-shop\\frontend\\src\\screens\\CartScreen\\index.jsx":"20","D:\\mydemo\\mobile-shop\\frontend\\src\\redux\\actions\\cart.js":"21","D:\\mydemo\\mobile-shop\\frontend\\src\\services\\cart.js":"22","D:\\mydemo\\mobile-shop\\frontend\\src\\redux\\reducers\\cart.js":"23","D:\\mydemo\\mobile-shop\\frontend\\src\\redux\\reducers\\user.js":"24","D:\\mydemo\\mobile-shop\\frontend\\src\\screens\\LoginScreen\\index.jsx":"25","D:\\mydemo\\mobile-shop\\frontend\\src\\components\\FormContainer\\index.jsx":"26","D:\\mydemo\\mobile-shop\\frontend\\src\\redux\\actions\\user.js":"27","D:\\mydemo\\mobile-shop\\frontend\\src\\services\\user.js":"28","D:\\mydemo\\mobile-shop\\frontend\\src\\screens\\RegisterScreen\\index.jsx":"29","D:\\mydemo\\mobile-shop\\frontend\\src\\screens\\ProfileScreen\\index.jsx":"30","D:\\mydemo\\mobile-shop\\frontend\\src\\screens\\ShippingScreen\\index.jsx":"31","D:\\mydemo\\mobile-shop\\frontend\\src\\components\\CheckoutSteps\\index.jsx":"32","D:\\mydemo\\mobile-shop\\frontend\\src\\screens\\PaymentScreen\\index.jsx":"33","D:\\mydemo\\mobile-shop\\frontend\\src\\screens\\PlaceorderScreen\\index.jsx":"34","D:\\mydemo\\mobile-shop\\frontend\\src\\redux\\actions\\order.js":"35","D:\\mydemo\\mobile-shop\\frontend\\src\\services\\order.js":"36","D:\\mydemo\\mobile-shop\\frontend\\src\\redux\\reducers\\order.js":"37","D:\\mydemo\\mobile-shop\\frontend\\src\\screens\\OrderScreen\\index.jsx":"38","D:\\mydemo\\mobile-shop\\frontend\\src\\screens\\UserListScreen\\index.jsx":"39","D:\\mydemo\\mobile-shop\\frontend\\src\\components\\MyModal\\index.jsx":"40","D:\\mydemo\\mobile-shop\\frontend\\src\\screens\\UserEditScreen\\index.jsx":"41","D:\\mydemo\\mobile-shop\\frontend\\src\\screens\\ProductListScreen\\index.jsx":"42","D:\\mydemo\\mobile-shop\\frontend\\src\\screens\\ProductEditScreen\\index.jsx":"43","D:\\mydemo\\mobile-shop\\frontend\\src\\screens\\OrderListScreen\\index.jsx":"44","D:\\mydemo\\mobile-shop\\frontend\\src\\components\\SearchBox\\index.jsx":"45","D:\\mydemo\\mobile-shop\\frontend\\src\\components\\Paginate\\index.jsx":"46","D:\\mydemo\\mobile-shop\\frontend\\src\\components\\ProductsCarousel\\index.jsx":"47"},{"size":529,"mtime":1645615556916,"results":"48","hashOfConfig":"49"},{"size":362,"mtime":499162500000,"results":"50","hashOfConfig":"49"},{"size":753,"mtime":1646893309245,"results":"51","hashOfConfig":"49"},{"size":3203,"mtime":1651390957147,"results":"52","hashOfConfig":"49"},{"size":331,"mtime":1642647385792,"results":"53","hashOfConfig":"49"},{"size":1328,"mtime":1651411555498,"results":"54","hashOfConfig":"49"},{"size":746,"mtime":1642823925263,"results":"55","hashOfConfig":"49"},{"size":2518,"mtime":1643365897116,"results":"56","hashOfConfig":"49"},{"size":2141,"mtime":1651390492475,"results":"57","hashOfConfig":"49"},{"size":7416,"mtime":1651458067865,"results":"58","hashOfConfig":"49"},{"size":1283,"mtime":1651411080025,"results":"59","hashOfConfig":"49"},{"size":2237,"mtime":1651287608905,"results":"60","hashOfConfig":"49"},{"size":315,"mtime":1643267668095,"results":"61","hashOfConfig":"49"},{"size":886,"mtime":1651411144763,"results":"62","hashOfConfig":"49"},{"size":4494,"mtime":1651457683942,"results":"63","hashOfConfig":"49"},{"size":5293,"mtime":1651459239905,"results":"64","hashOfConfig":"49"},{"size":4326,"mtime":1651411003862,"results":"65","hashOfConfig":"49"},{"size":315,"mtime":1643356756426,"results":"66","hashOfConfig":"49"},{"size":276,"mtime":1643357346703,"results":"67","hashOfConfig":"49"},{"size":4499,"mtime":1651368287395,"results":"68","hashOfConfig":"49"},{"size":2178,"mtime":1649432459756,"results":"69","hashOfConfig":"49"},{"size":367,"mtime":1644151407963,"results":"70","hashOfConfig":"49"},{"size":2834,"mtime":1649432472382,"results":"71","hashOfConfig":"49"},{"size":4523,"mtime":1651397803551,"results":"72","hashOfConfig":"49"},{"size":2567,"mtime":1644224476172,"results":"73","hashOfConfig":"49"},{"size":369,"mtime":1644208662341,"results":"74","hashOfConfig":"49"},{"size":5379,"mtime":1651397696552,"results":"75","hashOfConfig":"49"},{"size":1116,"mtime":1651397741802,"results":"76","hashOfConfig":"49"},{"size":5059,"mtime":1651022026285,"results":"77","hashOfConfig":"49"},{"size":7481,"mtime":1651412709830,"results":"78","hashOfConfig":"49"},{"size":3025,"mtime":1648209254493,"results":"79","hashOfConfig":"49"},{"size":1065,"mtime":1648213488828,"results":"80","hashOfConfig":"49"},{"size":1814,"mtime":1649430965911,"results":"81","hashOfConfig":"49"},{"size":5452,"mtime":1651459493140,"results":"82","hashOfConfig":"49"},{"size":3637,"mtime":1651412606705,"results":"83","hashOfConfig":"49"},{"size":879,"mtime":1651396920476,"results":"84","hashOfConfig":"49"},{"size":3472,"mtime":1651396991128,"results":"85","hashOfConfig":"49"},{"size":9857,"mtime":1651459477220,"results":"86","hashOfConfig":"49"},{"size":3728,"mtime":1651459894507,"results":"87","hashOfConfig":"49"},{"size":678,"mtime":1651138134246,"results":"88","hashOfConfig":"49"},{"size":5457,"mtime":1651045026561,"results":"89","hashOfConfig":"49"},{"size":4932,"mtime":1651396549903,"results":"90","hashOfConfig":"49"},{"size":7696,"mtime":1651121827377,"results":"91","hashOfConfig":"49"},{"size":2898,"mtime":1651397370094,"results":"92","hashOfConfig":"49"},{"size":848,"mtime":1651391925793,"results":"93","hashOfConfig":"49"},{"size":572,"mtime":1651396373256,"results":"94","hashOfConfig":"49"},{"size":1256,"mtime":1651411759510,"results":"95","hashOfConfig":"49"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},"v4wqde",{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"98"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"98"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"98"},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"98"},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"98"},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},"D:\\mydemo\\mobile-shop\\frontend\\src\\index.js",[],["197","198"],"D:\\mydemo\\mobile-shop\\frontend\\src\\reportWebVitals.js",[],"D:\\mydemo\\mobile-shop\\frontend\\src\\App.js",[],"D:\\mydemo\\mobile-shop\\frontend\\src\\components\\Header\\index.jsx",[],"D:\\mydemo\\mobile-shop\\frontend\\src\\components\\Footer\\index.jsx",[],"D:\\mydemo\\mobile-shop\\frontend\\src\\screens\\HomeScreen\\index.jsx",[],"D:\\mydemo\\mobile-shop\\frontend\\src\\components\\Product\\index.jsx",[],"D:\\mydemo\\mobile-shop\\frontend\\src\\components\\Rating\\index.jsx",[],"D:\\mydemo\\mobile-shop\\frontend\\src\\router\\index.js",[],"D:\\mydemo\\mobile-shop\\frontend\\src\\screens\\ProductScreen\\index.jsx",[],"D:\\mydemo\\mobile-shop\\frontend\\src\\services\\products.js",[],"D:\\mydemo\\mobile-shop\\frontend\\src\\services\\request.js",[],"D:\\mydemo\\mobile-shop\\frontend\\src\\redux\\store.js",[],"D:\\mydemo\\mobile-shop\\frontend\\src\\redux\\reducers\\index.js",[],"D:\\mydemo\\mobile-shop\\frontend\\src\\redux\\reducers\\product.js",[],"D:\\mydemo\\mobile-shop\\frontend\\src\\redux\\constant.js",[],"D:\\mydemo\\mobile-shop\\frontend\\src\\redux\\actions\\product.js",[],"D:\\mydemo\\mobile-shop\\frontend\\src\\components\\Loader\\index.jsx",[],"D:\\mydemo\\mobile-shop\\frontend\\src\\components\\Message\\index.jsx",[],"D:\\mydemo\\mobile-shop\\frontend\\src\\screens\\CartScreen\\index.jsx",[],"D:\\mydemo\\mobile-shop\\frontend\\src\\redux\\actions\\cart.js",[],"D:\\mydemo\\mobile-shop\\frontend\\src\\services\\cart.js",[],"D:\\mydemo\\mobile-shop\\frontend\\src\\redux\\reducers\\cart.js",["199"],"import {\r\n    Cart_LIST_REQUEST,\r\n    Cart_LIST_SUCCESS,\r\n    Cart_LIST_FAIL,\r\n    Cart_LIST_RESET,\r\n    Cart_UPDATE_REQUEST,\r\n    Cart_UPDATE_SUCCESS,\r\n    Cart_UPDATE_FAIL,\r\n    Cart_UPDATE_RESET,\r\n    Cart_DELETE_REQUEST,\r\n    Cart_DELETE_SUCCESS,\r\n    Cart_DELETE_FAIL,\r\n    Cart_DELETE_RESET,\r\n    Shipping_Save,\r\n    PaymentMethod_Save\r\n} from '../constant.js'\r\n\r\n//查询购物车\r\nexport const cartList = (state = { cartItems: [] }, action) => {\r\n    const { type, payload } = action\r\n    switch (type) {\r\n        case Cart_LIST_REQUEST:\r\n            return { loading: true, cartItems: [] }\r\n        case Cart_LIST_SUCCESS:\r\n            return { loading: false, cartItems: payload }\r\n        case Cart_LIST_FAIL:\r\n          \r\n            return { loading: false, error: payload }\r\n        case Cart_LIST_RESET:\r\n            return {cartItems: []}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//更新购物车\r\nexport const cartUpdate = (state = {}, action) => {\r\n    const { type, payload } = action\r\n    switch (type) {\r\n        case Cart_UPDATE_REQUEST:\r\n            return { loading: true }\r\n        case Cart_UPDATE_SUCCESS:\r\n            return { loading: false, message: payload }\r\n        case Cart_UPDATE_FAIL:\r\n            return { loading: false, error: payload }\r\n        case Cart_UPDATE_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//根据id删除购物车商品\r\nexport const cartDelete = (state = {}, action) => {\r\n    const { type, payload } = action\r\n    switch (type) {\r\n        case Cart_DELETE_REQUEST:\r\n            return { loading: true }\r\n        case Cart_DELETE_SUCCESS:\r\n           \r\n            return { loading: false, message: payload }\r\n        case Cart_DELETE_FAIL:\r\n          \r\n            return { loading: false, error: payload }\r\n        case Cart_DELETE_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n//购物地址以及支付方式存储\r\nlet shippingAdress\r\nif(localStorage.getItem('shippingAdress')){\r\n    shippingAdress = JSON.parse(localStorage.getItem('shippingAdress'))\r\n}else if(localStorage.getItem('userInfo')){\r\n    shippingAdress =JSON.parse(localStorage.getItem('userInfo')).shippingAddress\r\n}else{\r\n    {}\r\n}\r\n //const shippingAdress=JSON.parse(localStorage.getItem('shippingAdress'))||JSON.parse(localStorage.getItem('userInfo')).shippingAddress\r\nconst paymentMethod = localStorage.getItem('paymentMethod')||'weixin'\r\nexport const shippingInfo = (state={shippingAdress,paymentMethod},action)=>{\r\n    const {type,payload} = action\r\n\r\n    switch(type){\r\n        case Shipping_Save:\r\n            return {...state,shippingAdress:payload}\r\n        case PaymentMethod_Save:\r\n            return {...state,paymentMethod:payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","D:\\mydemo\\mobile-shop\\frontend\\src\\redux\\reducers\\user.js",[],"D:\\mydemo\\mobile-shop\\frontend\\src\\screens\\LoginScreen\\index.jsx",[],"D:\\mydemo\\mobile-shop\\frontend\\src\\components\\FormContainer\\index.jsx",[],"D:\\mydemo\\mobile-shop\\frontend\\src\\redux\\actions\\user.js",[],"D:\\mydemo\\mobile-shop\\frontend\\src\\services\\user.js",[],"D:\\mydemo\\mobile-shop\\frontend\\src\\screens\\RegisterScreen\\index.jsx",[],"D:\\mydemo\\mobile-shop\\frontend\\src\\screens\\ProfileScreen\\index.jsx",["200","201"],"import React,{useState,useEffect} from 'react';\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport {Form,Button,Row,Col,Table} from 'react-bootstrap'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport Message from '../../components/Message';\r\nimport Loader from '../../components/Loader';\r\nimport {USER_PROFILE_UPDATE_RESET} from '../../redux/constant'\r\nimport {orderListMy} from '../../redux/actions/order.js'\r\nimport {userProfile,userProfileUpdate} from '../../redux/actions/user.js'\r\nconst ProfileScreen = () => {\r\n  const {loading,error,userInfo} = useSelector(state=>state.userProfile)\r\n  const { loading: updateloading, error: updateerror,success } = useSelector(state=>state.userProfileUpdate)\r\n\r\n  const { loading: loadingOrders, error: errorOrders, orders } = useSelector((state) => state.orderListMy)\r\n \r\n  const dispatch = useDispatch()\r\n  const [user,setUser] = useState({})\r\n  const [message, setMessage] = useState(null)\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n  const [shippingAddress, setShippingAddress] = useState({})\r\n  useEffect(()=>{\r\n      if(orders && orders.length==0){\r\n        dispatch(orderListMy())\r\n      }\r\n      if(!userInfo._id||success){\r\n        dispatch({type:USER_PROFILE_UPDATE_RESET})\r\n        dispatch(userProfile())\r\n        \r\n      \r\n      }else{\r\n        setUser(userInfo)\r\n        setShippingAddress(userInfo.shippingAddress)\r\n      }\r\n      \r\n     \r\n  },[dispatch,userInfo,success])\r\n \r\n \r\n   //表单提交函数\r\n   const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    //dispatch register函数\r\n    if (user.password !== confirmPassword) {\r\n      setMessage('密码不匹配')\r\n    } else {\r\n      setMessage('')\r\n      dispatch(userProfileUpdate({...user,shippingAddress}))\r\n    }\r\n  }\r\n  return(\r\n    <Row>\r\n      <Col md={3}>\r\n        <h2>个人资料</h2>\r\n        {/* {success && <Message variant='success'>更新成功！</Message>} */}\r\n        {updateloading&&<Loader/>}\r\n        {message && <Message variant='danger'>{message}</Message>}\r\n        {updateerror&&<Message variant='danger'>{updateerror}</Message>}\r\n        {loading?<Loader/>:error?<Message variant='danger'>{error}</Message>:(\r\n          <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId='name'>\r\n            <Form.Label>姓名：</Form.Label>\r\n            <Form.Control\r\n              type='name'\r\n              placeholder='请输入姓名'\r\n              value={user.name}\r\n              required\r\n              onChange={(e) => setUser(state=>({...state,name:e.target.value}))}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId='email'>\r\n            <Form.Label>邮箱地址：</Form.Label>\r\n            <Form.Control\r\n              type='email'\r\n              placeholder='请输入邮箱'\r\n              value = {user.email}\r\n              required\r\n              onChange={(e) => setUser(state=>({...state,email:e.target.value}))}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId='password'>\r\n            <Form.Label>密码：</Form.Label>\r\n            <Form.Control\r\n              type='password'\r\n              placeholder='请输入密码'\r\n              value = {user.password}\r\n              required\r\n              onChange={(e) => setUser(state=>({...state,password:e.target.value}))}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId='confirmPassword'>\r\n            <Form.Label>确认密码：</Form.Label>\r\n            <Form.Control\r\n              type='password'\r\n              placeholder='请确认密码'\r\n              value={confirmPassword}\r\n              required\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId='province'>\r\n          <Form.Label>所在省份：</Form.Label>\r\n          <Form.Control\r\n            type='province'\r\n            placeholder='请输入所在省份'\r\n            value={shippingAddress.province}\r\n            required\r\n            onChange={(e) => setShippingAddress(state=>({...state,province:e.target.value}))}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n       \r\n        <Form.Group controlId='city'>\r\n          <Form.Label>所在地区：</Form.Label>\r\n          <Form.Control\r\n            type='city'\r\n            placeholder='请输入所在地区'\r\n            value={shippingAddress.city}\r\n            required\r\n            onChange={(e) => setShippingAddress(state=>({...state,city:e.target.value}))}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId='address'>\r\n          <Form.Label>详细地址：</Form.Label>\r\n          <Form.Control\r\n            type='address'\r\n            placeholder='请输入详细地址'\r\n            value={shippingAddress.address}\r\n            required\r\n            onChange={(e) => setShippingAddress(state=>({...state,address:e.target.value}))}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId='postalCode'>\r\n          <Form.Label>邮政编码：</Form.Label>\r\n          <Form.Control\r\n            type='postalCode'\r\n            placeholder='请输入邮政编码'\r\n            value={shippingAddress.postalCode}\r\n            required\r\n            onChange={(e) => setShippingAddress(state=>({...state,postalCode:e.target.value}))}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n          <Button type='submit' variant='primary'>\r\n            更改资料\r\n          </Button>\r\n        </Form>\r\n        )}\r\n      </Col>\r\n      <Col md={9}>\r\n        <h2>我的订单</h2>\r\n        {loadingOrders ? (\r\n          <Loader />\r\n        ) : errorOrders ? (\r\n          <Message variant='danger'>{errorOrders}</Message>\r\n        ) : (\r\n          <Table striped bordered hover responsive className='table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>下单日期</th>\r\n                <th>总价</th>\r\n                <th>支付状态</th>\r\n                <th>发货状态</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {orders.map((order) => (\r\n                <tr key={order._id}>\r\n                  <td>{order._id}</td>\r\n                  <td>{order.createdAt.substring(0, 10)}</td>\r\n                  <td>{order.totalPrice}</td>\r\n                  <td style={{color:'green'}}>\r\n                    {order.isPaid ? (\r\n                      order.paidAt.substring(0, 10)\r\n                    ) : (\r\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td style={{color:'green'}}>\r\n                    {order.isDelivered ? (\r\n                      order.deliveredAt.substring(0, 10)\r\n                    ) : (\r\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    <LinkContainer to={`/order/${order._id}`}>\r\n                      <Button variant='light' className='btn-sm'>\r\n                        订单详情\r\n                      </Button>\r\n                    </LinkContainer>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  )\r\n};\r\n\r\nexport default ProfileScreen;\r\n","D:\\mydemo\\mobile-shop\\frontend\\src\\screens\\ShippingScreen\\index.jsx",[],"D:\\mydemo\\mobile-shop\\frontend\\src\\components\\CheckoutSteps\\index.jsx",[],"D:\\mydemo\\mobile-shop\\frontend\\src\\screens\\PaymentScreen\\index.jsx",[],"D:\\mydemo\\mobile-shop\\frontend\\src\\screens\\PlaceorderScreen\\index.jsx",["202"],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, ListGroup, Row, Col, Image, Card } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../../components/Message'\r\nimport CheckoutSteps from '../../components/CheckoutSteps'\r\nimport { cartList} from '../../redux/actions/cart.js'\r\nimport {orderCreate} from '../../redux/actions/order.js'\r\nimport {ORDER_CREATE_RESET,ORDER_LIST_MY_RESET} from '../../redux/constant.js'\r\n\r\nconst PlaceorderScreen = ({ history }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const cart = useSelector(state=>state.cartList)\r\n  const {shippingAdress,paymentMethod} = useSelector(state=>state.shippingInfo)\r\n\r\n  const { order, success, error } = useSelector((state) => state.orderCreate) \r\n  //计算价格\r\n  const datafixed=(num)=>{\r\n      return (Math.round(num * 100) / 100).toFixed(2)\r\n  }\r\n  cart.itemsPrice =cart.cartItems.reduce((pre,item)=>{\r\n    return pre + item.qty*item.product.price\r\n  },0)\r\n  cart.shippingPrice = cart.itemsPrice>=100?0:20\r\n  cart.totalPrice=cart.itemsPrice+cart.shippingPrice\r\n  useEffect(()=>{\r\n     if (!cart.cartItems.length) {\r\n        dispatch(cartList())\r\n     }\r\n     if (success) {\r\n      history.push(`/order/${order._id}`)\r\n      dispatch({ type: ORDER_CREATE_RESET })\r\n      dispatch({type:ORDER_LIST_MY_RESET})\r\n    }\r\n  },[history, success])\r\n  //处理订单数据\r\n  const getOrderData = () =>{\r\n   const orderItems= cart.cartItems.map((item)=>{\r\n          return {\r\n            qty:item.qty,\r\n            name:item.product.name,\r\n            image:item.product.image,\r\n            price:item.product.price,\r\n            product:item.product._id\r\n          }\r\n    })\r\n    return {\r\n      orderItems,\r\n      shippingAddress:shippingAdress,\r\n      paymentMethod,\r\n      itemsPrice: cart.itemsPrice,\r\n      shippingPrice: cart.shippingPrice,\r\n      totalPrice: cart.totalPrice\r\n    }\r\n  } \r\n  //提交订单函数\r\n  const placeorderHandler = () => {\r\n      dispatch(orderCreate(getOrderData()))\r\n  }\r\n  return (\r\n    <>\r\n      <CheckoutSteps step1 step2 step3  />\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>收货地址</h2>\r\n              <p>\r\n                <strong>收件人地址：</strong>\r\n                {shippingAdress.province},{shippingAdress.city},\r\n                {shippingAdress.address},{shippingAdress.postalCode}\r\n              </p>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>支付方式</h2>\r\n              <strong>支付方法：{paymentMethod==='weixin'?`微信`:`PayPal`}</strong>\r\n             \r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>产品订单</h2>\r\n              {cart.cartItems.length === 0 ? (\r\n                <Message>购物车为空</Message>\r\n              ) : (\r\n                <ListGroup variant='flush'>\r\n                  {cart.cartItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.product.image}\r\n                            alt={item.product.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/products/${item.product._id}`}>\r\n                            {item.product.name}   \r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                            {item.qty} x {item.product.price} = {item.qty*item.product.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h2>订单详情</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>产品总价</Col>\r\n                  <Col>￥{cart.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>运费</Col>\r\n                  <Col>￥{cart.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>订单总价</Col>\r\n                  <Col>￥{cart.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Button\r\n                  type='button'\r\n                  className='btn-block'\r\n                  onClick={placeorderHandler}\r\n                  disabled={cart.cartItems.length === 0}\r\n                >\r\n                  提交订单\r\n                </Button>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PlaceorderScreen\r\n","D:\\mydemo\\mobile-shop\\frontend\\src\\redux\\actions\\order.js",[],"D:\\mydemo\\mobile-shop\\frontend\\src\\services\\order.js",[],"D:\\mydemo\\mobile-shop\\frontend\\src\\redux\\reducers\\order.js",[],"D:\\mydemo\\mobile-shop\\frontend\\src\\screens\\OrderScreen\\index.jsx",[],"D:\\mydemo\\mobile-shop\\frontend\\src\\screens\\UserListScreen\\index.jsx",[],"D:\\mydemo\\mobile-shop\\frontend\\src\\components\\MyModal\\index.jsx",[],"D:\\mydemo\\mobile-shop\\frontend\\src\\screens\\UserEditScreen\\index.jsx",["203"],"import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../../components/Message';\r\nimport Loader from '../../components/Loader';\r\nimport FormContainer from '../../components/FormContainer'\r\nimport {USER_UPDATE_RESET} from '../../redux/constant'\r\nimport { userDetails,userUpdate } from '../../redux/actions/user.js'\r\nconst UserEditScreen = ({match,history}) => {\r\n  const userId = match.params.id\r\n  const { loading, error, userInfo } = useSelector(state => state.userDetails)\r\n  const { success,loading: updateloading, error: updateerror } = useSelector(state => state.userUpdate)\r\n  \r\n  const dispatch = useDispatch()\r\n  const [user, setUser] = useState({})\r\n\r\n  const [shippingAddress, setShippingAddress] = useState({})\r\n  useEffect(() => {\r\n   \r\n    if (!userInfo._id||userInfo._id!==userId) {\r\n      dispatch(userDetails(userId))\r\n    } else {\r\n      setUser(userInfo)\r\n      setShippingAddress(userInfo.shippingAddress)\r\n    }\r\n\r\n    if(success){\r\n       dispatch({type:USER_UPDATE_RESET})\r\n       history.go(-1)\r\n    }\r\n\r\n  }, [dispatch, userInfo,success])\r\n\r\n\r\n  //表单提交函数\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(userUpdate({ _id:userId,...user, shippingAddress }))\r\n  }\r\n  return (\r\n    <Row>\r\n      <Col md={2}>\r\n        <Link to='/admin/userlist' className='btn btn-dark my-3' >\r\n          返回上一页\r\n        </Link>\r\n      </Col>\r\n\r\n      <Col md={10}>\r\n      <FormContainer >\r\n\r\n        <h1>编辑用户界面</h1>\r\n        {updateerror && <Message variant='danger'>{updateerror}</Message>}\r\n        {loading || updateloading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n          <Form onSubmit={submitHandler}>\r\n           <Row>\r\n           <Col md={6}>\r\n            <Form.Group controlId='name'>\r\n              <Form.Label>姓名：</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='请输入姓名'\r\n                value={user.name}\r\n                required\r\n                onChange={(e) => setUser(state => ({ ...state, name: e.target.value }))}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n           </Col>\r\n           <Col md={6}>\r\n            <Form.Group controlId='email'>\r\n              <Form.Label>邮箱地址：</Form.Label>\r\n              <Form.Control\r\n                type='email'\r\n                placeholder='请输入邮箱'\r\n                value={user.email}\r\n                required\r\n                onChange={(e) => setUser(state => ({ ...state, email: e.target.value }))}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n           <Col md={6}>\r\n            <Form.Group controlId='province'>\r\n              <Form.Label>所在省份：</Form.Label>\r\n              <Form.Control\r\n                type='province'\r\n                placeholder='请输入所在省份'\r\n                value={shippingAddress.province}\r\n                required\r\n                onChange={(e) => setShippingAddress(state => ({ ...state, province: e.target.value }))}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            </Col>\r\n            <Col md={6}>\r\n            <Form.Group controlId='city'>\r\n              <Form.Label>所在地区：</Form.Label>\r\n              <Form.Control\r\n                type='city'\r\n                placeholder='请输入所在地区'\r\n                value={shippingAddress.city}\r\n                required\r\n                onChange={(e) => setShippingAddress(state => ({ ...state, city: e.target.value }))}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n           <Col md={6}>\r\n            <Form.Group controlId='address'>\r\n              <Form.Label>详细地址：</Form.Label>\r\n              <Form.Control\r\n                type='address'\r\n                placeholder='请输入详细地址'\r\n                value={shippingAddress.address}\r\n                required\r\n                onChange={(e) => setShippingAddress(state => ({ ...state, address: e.target.value }))}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            </Col>\r\n            <Col md={6}>\r\n            <Form.Group controlId='postalCode'>\r\n              <Form.Label>邮政编码：</Form.Label>\r\n              <Form.Control\r\n                type='postalCode'\r\n                placeholder='请输入邮政编码'\r\n                value={shippingAddress.postalCode}\r\n                required\r\n                onChange={(e) => setShippingAddress(state => ({ ...state, postalCode: e.target.value }))}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            </Col>\r\n          </Row>\r\n    \r\n          <Form.Group controlId='isadmin'>\r\n            <Form.Check\r\n              type='checkbox'\r\n              label='Is Admin'\r\n              checked={user.isAdmin}\r\n              onChange={(e) => setUser(state => ({ ...state, isAdmin: e.target.checked }))}\r\n            ></Form.Check>\r\n          </Form.Group>\r\n       \r\n            <Button type='submit' variant='primary' >\r\n              更改信息\r\n            </Button>\r\n          </Form>\r\n\r\n        )}\r\n      </FormContainer>\r\n      </Col></Row>\r\n  )\r\n};\r\n\r\nexport default UserEditScreen;\r\n","D:\\mydemo\\mobile-shop\\frontend\\src\\screens\\ProductListScreen\\index.jsx",["204"],"import React, { useEffect,useState } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../../components/Message'\r\nimport Loader from '../../components/Loader'\r\nimport MyModal from '../../components/MyModal'\r\nimport Paginate from '../../components/Paginate'\r\nimport {\r\n    productList,productDelete\r\n} from '../../redux/actions/product'\r\n\r\nconst ProductListScreen = ({ history, location }) => {\r\n    const pageNumber = location.search ? Number(location.search.split('=')[1]) : 1\r\n    const dispatch = useDispatch()\r\n    const { loading, error, products, pages, page } = useSelector((state) => state.productList)\r\n    const {loading:deleteloading,error:deleteerror,success} =useSelector((state) => state.productDelete)\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo } = userLogin\r\n    const [modal,setModal] = useState(false)\r\n    const [deleteProductName,setDeleteProductName] = useState('')\r\n    const [deleteProductId,setDeleteProductId] = useState('')\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(productList('',pageNumber,6))\r\n        }\r\n    }, [\r\n        dispatch,success,pageNumber\r\n    ])\r\n\r\n    //删除产品函数\r\n    const deleteHandler = (id,name) => {\r\n        setDeleteProductId(id)\r\n        setDeleteProductName(name)\r\n        setModal(true)\r\n    }\r\n    //取消删除\r\n    const handleClose = () => {\r\n        setModal(false)\r\n\r\n    }\r\n    //确认删除\r\n    const handleDone = () => {\r\n        setModal(false)\r\n        dispatch(productDelete(deleteProductId))\r\n    }\r\n\r\n    //创建产品\r\n    const createProductHandler = () => {\r\n        history.push(\"/admin/product\")\r\n\r\n    }\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col>\r\n                    {' '}\r\n                    <h1>产品列表</h1>\r\n                </Col>\r\n                <Col className='text-right'>\r\n                    <Button className='my-3' onClick={createProductHandler}>\r\n                        创建产品\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            {deleteerror&&<Message variant='danger'>{deleteerror}</Message>}\r\n            {loading||deleteloading ? (\r\n                <Loader />\r\n            ) : error ? (\r\n                <Message variant='danger'>{error}</Message>\r\n            ) : (\r\n                <>\r\n                    <Table striped bordered hover responsive className='table-sm'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>产品名称</th>\r\n                                <th>价格</th>\r\n                                <th>类型</th>\r\n                                <th>品牌</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {products.map((product) => (\r\n                                <tr key={product._id}>\r\n                                    <td>{product._id}</td>\r\n                                    <td>{product.name}</td>\r\n                                    <td>{product.price}</td>\r\n                                    <td>{product.category}</td>\r\n                                    <td>{product.brand}</td>\r\n                                    <td>\r\n                                        <LinkContainer to={`/admin/product/${product._id}`}>\r\n                                            <Button variant='light' className='btn-sm'>\r\n                                                <i className='fas fa-edit'></i>\r\n                                            </Button>\r\n                                        </LinkContainer>\r\n                                        <Button\r\n                                            variant='danger'\r\n                                            className='btn-sm'\r\n                                            onClick={() => deleteHandler(product._id,product.name)}\r\n                                        >\r\n                                            <i className='fas fa-trash'></i>\r\n                                        </Button>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                    <Paginate pages={pages} page={page} url='/admin/productlist' />\r\n                    {modal&&<MyModal title='删除产品'\r\n                    body={`确认删除产品${deleteProductName}？`} \r\n                    handleClose={handleClose}\r\n                    handleDone={handleDone}/>}\r\n                </>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductListScreen\r\n","D:\\mydemo\\mobile-shop\\frontend\\src\\screens\\ProductEditScreen\\index.jsx",["205"],"import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../../components/Message';\r\nimport Loader from '../../components/Loader';\r\nimport FormContainer from '../../components/FormContainer'\r\nimport {PRODUCT_UPDATE_RESET,PRODUCT_CREATE_RESET } from '../../redux/constant'\r\nimport { productDetails,productUpdate,productCreate} from '../../redux/actions/product.js'\r\nimport {uploadProductImage} from '../../services/products'\r\nconst ProductEditScreen = ({match,history}) => {\r\n  const productId = match.params.id\r\n\r\n  const { loading,error,product } = useSelector(state => state.productDetails)\r\n  const { success:updatesuccess,loading: updateloading, error: updateerror } = useSelector(state => state.productUpdate)\r\n  const { success:createsuccess,loading: createloading, error: createerror } = useSelector(state => state.productCreate)\r\n  const dispatch = useDispatch()\r\n\r\n  const [uploadLoading,setUploadLoading] = useState(false)\r\n  const [uploadError,setUploadError] = useState('')\r\n  const [productInfo, setProductInfo] = useState({\r\n    name: '样品名称',\r\n    price: 0,\r\n    image: '/images/sample.jpg',\r\n    brand: '样品品牌',\r\n    category: '样品分类',\r\n    countInStock: 0,\r\n    numReviews: 0,\r\n    description: '样品描述',\r\n    rating: 0\r\n  })\r\n\r\n  useEffect(() => {\r\n    if(productId){\r\n        if (!product._id||product._id!==productId) {\r\n            dispatch(productDetails(productId))\r\n        } else {\r\n            setProductInfo(product)\r\n        }\r\n    }\r\n \r\n    if(updatesuccess||createsuccess){\r\n       dispatch({type:PRODUCT_UPDATE_RESET})\r\n       dispatch({type:PRODUCT_CREATE_RESET})\r\n       history.go(-1)\r\n    }\r\n\r\n  }, [dispatch,product,updatesuccess,createsuccess])\r\n\r\n\r\n  //表单提交函数\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    if(productId){\r\n        dispatch(productUpdate(productInfo))\r\n    }else{\r\n        dispatch(productCreate(productInfo))\r\n        \r\n    }\r\n   \r\n  }\r\n  //处理文件上传\r\n  const uploadFileHandler = async (e) => {\r\n    const file = e.target.files[0]\r\n    \r\n    const filtTypes = /jpg|jpeg|png|gif|webp|svg/\r\n    const extname = filtTypes.test(file.name.split('.')[1])\r\n    const type = filtTypes.test(file.type.split('/')[1])\r\n    if(!extname||!type){\r\n      setUploadError('仅限图片格式jpg、jpeg、png、gif、webp、svg')\r\n      return\r\n    }\r\n    setUploadError('')\r\n    const formData =  new FormData()\r\n    formData.append('image',file)\r\n    try{\r\n      setUploadLoading(true)\r\n      const path = await uploadProductImage(formData)\r\n      setProductInfo(state => ({ ...state, image: path}))\r\n      setUploadError('')\r\n      setUploadLoading(false)\r\n    }catch(error){\r\n      setUploadError(error.response.data.message)\r\n      setUploadLoading(false)\r\n    }\r\n  }\r\n  return (\r\n    <Row>\r\n      <Col md={2}>\r\n        <Button onClick={()=>{history.go(-1)}} className='btn btn-dark my-3' >\r\n          返回上一页\r\n        </Button>\r\n      </Col>\r\n\r\n      <Col md={10}>\r\n      <FormContainer >\r\n\r\n        {productId?<h1>编辑产品界面</h1>:<h1>创建产品界面</h1>}\r\n        {updateerror && <Message variant='danger'>{updateerror}</Message>}\r\n        {createerror && <Message variant='danger'>{createerror}</Message>}\r\n        {loading || updateloading ||createloading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n          <Form onSubmit={submitHandler}>\r\n           <Row>\r\n           <Col md={6}>\r\n            <Form.Group controlId='name'>\r\n              <Form.Label>姓名：</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='请输入产品名称'\r\n                value={productInfo.name}\r\n                required\r\n                onChange={(e) => setProductInfo(state => ({ ...state, name: e.target.value }))}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n           </Col>\r\n           <Col md={6}>\r\n            <Form.Group controlId='price'>\r\n              <Form.Label>产品价格：</Form.Label>\r\n              <Form.Control\r\n                type='number'\r\n                placeholder='请输入价格'\r\n                value={productInfo.price}\r\n                required\r\n                onChange={(e) => setProductInfo(state => ({ ...state, price: e.target.value }))}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n           <Col md={6}>\r\n            <Form.Group controlId='image'>\r\n              <Form.Label>图片：</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='请输入图片路径'\r\n                value={productInfo.image}\r\n                required\r\n                onChange={(e) => setProductInfo(state => ({ ...state, image: e.target.value }))}\r\n              ></Form.Control>\r\n               <Form.File\r\n                id='image-file'\r\n                label='选择上传图片'\r\n                custom\r\n                onChange={uploadFileHandler}\r\n              ></Form.File>\r\n               {uploadError && <Message variant='danger'>{uploadError}</Message>}\r\n               {uploadLoading &&<Loader/>}\r\n            </Form.Group>\r\n            </Col>\r\n            <Col md={6}>\r\n            <Form.Group controlId='brand'>\r\n              <Form.Label>品牌：</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='请输入品牌'\r\n                value={productInfo.brand}\r\n                required\r\n                onChange={(e) => setProductInfo(state => ({ ...state, brand: e.target.value }))}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n           <Col md={6}>\r\n            <Form.Group controlId='countInStock'>\r\n              <Form.Label>产品库存：</Form.Label>\r\n              <Form.Control\r\n                type='number'\r\n                placeholder='请输入库存数量'\r\n                value={productInfo.countInStock}\r\n                required\r\n                onChange={(e) => setProductInfo(state => ({ ...state, countInStock: e.target.value }))}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            </Col>\r\n            <Col md={6}>\r\n            <Form.Group controlId='category'>\r\n              <Form.Label>产品类型：</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='请输入产品类型'\r\n                value={productInfo.category}\r\n                required\r\n                onChange={(e) => setProductInfo(state => ({ ...state, category: e.target.value }))}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n           <Col md={6}>\r\n            <Form.Group controlId='description'>\r\n              <Form.Label>产品介绍：</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='请输入产品介绍'\r\n                value={productInfo.description}\r\n                required\r\n                onChange={(e) => setProductInfo(state => ({ ...state, description: e.target.value }))}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            </Col>\r\n        \r\n          </Row>\r\n        \r\n       \r\n            <Button type='submit' variant='primary' >\r\n              更改信息\r\n            </Button>\r\n          </Form>\r\n\r\n        )}\r\n      </FormContainer>\r\n      </Col></Row>\r\n  )\r\n};\r\n\r\nexport default ProductEditScreen;\r\n","D:\\mydemo\\mobile-shop\\frontend\\src\\screens\\OrderListScreen\\index.jsx",[],"D:\\mydemo\\mobile-shop\\frontend\\src\\components\\SearchBox\\index.jsx",[],"D:\\mydemo\\mobile-shop\\frontend\\src\\components\\Paginate\\index.jsx",[],"D:\\mydemo\\mobile-shop\\frontend\\src\\components\\ProductsCarousel\\index.jsx",[],{"ruleId":"206","replacedBy":"207"},{"ruleId":"208","replacedBy":"209"},{"ruleId":"210","severity":1,"message":"211","line":80,"column":5,"nodeType":"212","messageId":"213","endLine":80,"endColumn":7},{"ruleId":"214","severity":1,"message":"215","line":22,"column":33,"nodeType":"216","messageId":"217","endLine":22,"endColumn":35},{"ruleId":"218","severity":1,"message":"219","line":36,"column":5,"nodeType":"220","endLine":36,"endColumn":32,"suggestions":"221"},{"ruleId":"218","severity":1,"message":"222","line":36,"column":5,"nodeType":"220","endLine":36,"endColumn":23,"suggestions":"223"},{"ruleId":"218","severity":1,"message":"224","line":33,"column":6,"nodeType":"220","endLine":33,"endColumn":34,"suggestions":"225"},{"ruleId":"218","severity":1,"message":"226","line":27,"column":8,"nodeType":"220","endLine":29,"endColumn":6,"suggestions":"227"},{"ruleId":"218","severity":1,"message":"228","line":48,"column":6,"nodeType":"220","endLine":48,"endColumn":52,"suggestions":"229"},"no-native-reassign",["230"],"no-negated-in-lhs",["231"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'orders'. Either include it or remove the dependency array.","ArrayExpression",["232"],"React Hook useEffect has missing dependencies: 'cart.cartItems.length', 'dispatch', and 'order._id'. Either include them or remove the dependency array.",["233"],"React Hook useEffect has missing dependencies: 'history' and 'userId'. Either include them or remove the dependency array.",["234"],"React Hook useEffect has a missing dependency: 'userInfo'. Either include it or remove the dependency array.",["235"],"React Hook useEffect has missing dependencies: 'history' and 'productId'. Either include them or remove the dependency array.",["236"],"no-global-assign","no-unsafe-negation",{"desc":"237","fix":"238"},{"desc":"239","fix":"240"},{"desc":"241","fix":"242"},{"desc":"243","fix":"244"},{"desc":"245","fix":"246"},"Update the dependencies array to be: [dispatch, userInfo, success, orders]",{"range":"247","text":"248"},"Update the dependencies array to be: [cart.cartItems.length, dispatch, history, order._id, success]",{"range":"249","text":"250"},"Update the dependencies array to be: [dispatch, userInfo, success, userId, history]",{"range":"251","text":"252"},"Update the dependencies array to be: [dispatch, success, pageNumber, userInfo]",{"range":"253","text":"254"},"Update the dependencies array to be: [dispatch, product, updatesuccess, createsuccess, productId, history]",{"range":"255","text":"256"},[1444,1471],"[dispatch, userInfo, success, orders]",[1399,1417],"[cart.cartItems.length, dispatch, history, order._id, success]",[1208,1236],"[dispatch, userInfo, success, userId, history]",[1287,1332],"[dispatch, success, pageNumber, userInfo]",[1801,1847],"[dispatch, product, updatesuccess, createsuccess, productId, history]"]